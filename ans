
    import React from 'react';
import { render } from '@testing-library/react';
import { txnWorkdeskContext } from '@store';
import ContextProvider from './ContextProvider'; // Replace with the correct path

describe('ContextProvider', () => {
  it('should render children and provide context value', () => {
    // Mock values for the context
    const mockStoreContext = { state: { key: 'value' }, dispatch: jest.fn() };

    jest.spyOn(React, 'useContext').mockReturnValue(mockStoreContext);

    // Mock child component to consume context
    const ChildComponent = () => {
      const context = React.useContext(txnWorkdeskContext);
      return <div>{context.state.key}</div>;
    };

    const { getByText } = render(
      <ContextProvider>
        <ChildComponent />
      </ContextProvider>
    );

    // Ensure child component rendered correctly
    expect(getByText('value')).toBeInTheDocument();
  });

  it('should render without crashing when no children are provided', () => {
    const { container } = render(<ContextProvider />);
    expect(container).toBeDefined();
  });
});
